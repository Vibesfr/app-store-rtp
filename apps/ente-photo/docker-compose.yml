version: "3.8"

services:
  ente-server:
    image: ghcr.io/ente-io/server:v0.1.14 # Pinned to a specific version for stability
    container_name: ente-server-${APP_ID}
    restart: unless-stopped
    ports:
      - ${APP_PORT}:8080
    environment:
      - ENTE_DB_HOST=ente-postgres-${APP_ID}
      - ENTE_DB_PORT=5432
      - ENTE_DB_NAME=ente_db
      - ENTE_DB_USER=ente
      - ENTE_DB_PASSWORD=${ENTE_DB_PASSWORD}
      - ENTE_S3_ENDPOINT=http://ente-minio-${APP_ID}:9000
      - ENTE_S3_ACCESS_KEY=${ENTE_S3_ACCESS_KEY}
      - ENTE_S3_SECRET_KEY=${ENTE_S3_SECRET_KEY}
      - ENTE_S3_BUCKET=ente-data
      - ENTE_S3_REGION=us-east-1 # MinIO ignores this but Ente server might expect it
      - ENTE_ADMIN_EMAIL=${ENTE_ADMIN_EMAIL}
      - ENTE_ADMIN_PASSWORD=${ENTE_ADMIN_PASSWORD}
      - ENTE_JWT_SECRET=${ENTE_JWT_SECRET}
      - ENTE_SIGNUP_DISABLED=${ENTE_SIGNUP_DISABLED:-false}
      - ENTE_SMTP_HOST=${ENTE_SMTP_HOST:-}
      - ENTE_SMTP_PORT=${ENTE_SMTP_PORT:-587}
      - ENTE_SMTP_USERNAME=${ENTE_SMTP_USERNAME:-}
      - ENTE_SMTP_PASSWORD=${ENTE_SMTP_PASSWORD:-}
      - ENTE_SMTP_FROM=${ENTE_SMTP_FROM:-}
    volumes:
      - ${APP_DATA_DIR}/server_data:/data # Ente server might use /data for internal things
    depends_on:
      - ente-postgres
      - ente-minio
    networks:
      - tipi_main_network
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.ente-photos-${APP_ID}-redirect.redirectscheme.scheme=https
      - traefik.http.services.ente-photos-${APP_ID}.loadbalancer.server.port=8080
      # Web
      - traefik.http.routers.ente-photos-${APP_ID}-insecure.rule=Host(`${APP_DOMAIN}`)
      - traefik.http.routers.ente-photos-${APP_ID}-insecure.entrypoints=web
      - traefik.http.routers.ente-photos-${APP_ID}-insecure.service=ente-photos-${APP_ID}
      - traefik.http.routers.ente-photos-${APP_ID}-insecure.middlewares=ente-photos-${APP_ID}-redirect
      # Websecure
      - traefik.http.routers.ente-photos-${APP_ID}.rule=Host(`${APP_DOMAIN}`)
      - traefik.http.routers.ente-photos-${APP_ID}.entrypoints=websecure
      - traefik.http.routers.ente-photos-${APP_ID}.service=ente-photos-${APP_ID}
      - traefik.http.routers.ente-photos-${APP_ID}.tls.certresolver=myresolver
      # Local domain
      - traefik.http.routers.ente-photos-${APP_ID}-local-insecure.rule=Host(`ente-photos.${LOCAL_DOMAIN}`)
      - traefik.http.routers.ente-photos-${APP_ID}-local-insecure.entrypoints=web
      - traefik.http.routers.ente-photos-${APP_ID}-local-insecure.service=ente-photos-${APP_ID}
      - traefik.http.routers.ente-photos-${APP_ID}-local.rule=Host(`ente-photos.${LOCAL_DOMAIN}`)
      - traefik.http.routers.ente-photos-${APP_ID}-local.entrypoints=websecure
      - traefik.http.routers.ente-photos-${APP_ID}-local.service=ente-photos-${APP_ID}
      - traefik.http.routers.ente-photos-${APP_ID}-local.tls=true
      - runtipi.managed=true
      - runtipi.app_id=${APP_ID}

  ente-postgres:
    image: postgres:15-alpine
    container_name: ente-postgres-${APP_ID}
    restart: unless-stopped
    environment:
      - POSTGRES_DB=ente_db
      - POSTGRES_USER=ente
      - POSTGRES_PASSWORD=${ENTE_DB_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ${APP_DATA_DIR}/postgres_data:/var/lib/postgresql/data
    networks:
      - tipi_main_network
    labels:
      - runtipi.managed=true
      - runtipi.app_id=${APP_ID}

  ente-minio:
    image: minio/minio:RELEASE.2023-09-07T02-05-02Z # Pinned version
    container_name: ente-minio-${APP_ID}
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${ENTE_S3_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${ENTE_S3_SECRET_KEY}
    volumes:
      - ${APP_DATA_DIR}/minio_data:/data
    networks:
      - tipi_main_network
    labels:
      - runtipi.managed=true
      - runtipi.app_id=${APP_ID}

  ente-createbuckets:
    image: minio/mc:RELEASE.2023-09-07T02-16-06Z # Pinned version
    container_name: ente-createbuckets-${APP_ID}
    depends_on:
      ente-minio:
        condition: service_started # Wait for minio to be somewhat ready
    entrypoint: >
      /bin/sh -c "
      echo 'Waiting for MinIO to be ready...';
      until /usr/bin/mc alias set myminio http://ente-minio-${APP_ID}:9000 ${ENTE_S3_ACCESS_KEY} ${ENTE_S3_SECRET_KEY}; do
        echo 'MinIO not ready yet, retrying in 5s...';
        sleep 5;
      done;
      echo 'MinIO ready, creating bucket...';
      /usr/bin/mc mb myminio/ente-data --ignore-existing;
      /usr/bin/mc policy set public myminio/ente-data;
      echo 'Bucket creation process finished.';
      exit 0;
      "
    networks:
      - tipi_main_network
    labels:
      - runtipi.managed=true
      - runtipi.app_id=${APP_ID}

networks:
  tipi_main_network:
    external: true
    name: tipi_main_network
